/******************************************************************************/
/***          Generated by IBExpert 2006.03.07 12/06/2006 14:40:23          ***/
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES ISO8859_1;

CREATE DATABASE '127.0.0.1:D:\Trabalho\Delphi\Cadastros com heranças\DB\CADASTRO.gdb'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 16384
DEFAULT CHARACTER SET ISO8859_1;



/******************************************************************************/
/***                               Generators                               ***/
/******************************************************************************/

CREATE GENERATOR GEN_CARGO_ID;
SET GENERATOR GEN_CARGO_ID TO 0;

CREATE GENERATOR GEN_PESSOA_ID;
SET GENERATOR GEN_PESSOA_ID TO 1;

CREATE GENERATOR GEN_TIPO_ID;
SET GENERATOR GEN_TIPO_ID TO 7;



SET TERM ^ ;



/******************************************************************************/
/***                           Stored Procedures                            ***/
/******************************************************************************/

CREATE PROCEDURE SP_GEN_CARGO_ID
RETURNS (ID INTEGER)
AS
BEGIN
  EXIT;
END^


CREATE PROCEDURE SP_GEN_PESSOA_ID
RETURNS (ID INTEGER)
AS
BEGIN
  EXIT;
END^


CREATE PROCEDURE SP_GEN_TIPO_ID
RETURNS (ID INTEGER)
AS
BEGIN
  EXIT;
END^



SET TERM ; ^


/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/



CREATE TABLE CARGO (
    ID_CARGO      INTEGER NOT NULL,
    NO_CARGO      VARCHAR(40) CHARACTER SET ISO8859_1 NOT NULL COLLATE PT_BR,
    DT_CRIACAO    TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    DT_ALTERACAO  TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE PESSOA (
    ID_PESSOA     INTEGER NOT NULL,
    NO_PESSOA     VARCHAR(60) CHARACTER SET ISO8859_1 NOT NULL COLLATE PT_BR,
    ID_TIPO       INTEGER NOT NULL,
    IN_FJ         CHAR(1) NOT NULL,
    DT_CRIACAO    TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    DT_ALTERACAO  TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE TIPO (
    ID_TIPO       INTEGER NOT NULL,
    NO_TIPO       VARCHAR(40) CHARACTER SET ISO8859_1 NOT NULL COLLATE PT_BR,
    DT_CRIACAO    TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    DT_ALTERACAO  TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);



/* Check constraints definition */

ALTER TABLE PESSOA ADD CHECK (IN_FJ IN ('F', 'J'));


/******************************************************************************/
/***                              Primary Keys                              ***/
/******************************************************************************/

ALTER TABLE CARGO ADD CONSTRAINT PK_CARGO PRIMARY KEY (ID_CARGO);
ALTER TABLE PESSOA ADD CONSTRAINT PK_PESSOA PRIMARY KEY (ID_PESSOA);
ALTER TABLE TIPO ADD CONSTRAINT PK_TIPO PRIMARY KEY (ID_TIPO);


/******************************************************************************/
/***                              Foreign Keys                              ***/
/******************************************************************************/

ALTER TABLE PESSOA ADD CONSTRAINT FK_PESSOA_1 FOREIGN KEY (ID_TIPO) REFERENCES TIPO (ID_TIPO);


/******************************************************************************/
/***                                Indices                                 ***/
/******************************************************************************/

CREATE UNIQUE INDEX AK_CARGO_1 ON CARGO (NO_CARGO);
CREATE INDEX AK_PESSOA_1 ON PESSOA (NO_PESSOA);
CREATE INDEX AK_PESSOA_2 ON PESSOA (NO_PESSOA, IN_FJ);
CREATE UNIQUE INDEX AK_TIPO_1 ON TIPO (NO_TIPO);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/


SET TERM ^ ;


/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: CARGO_BI */
CREATE TRIGGER CARGO_BI FOR CARGO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID_CARGO IS NULL) THEN
    NEW.ID_CARGO = GEN_ID(GEN_CARGO_ID,1);
END
^

/* Trigger: CARGO_BU */
CREATE TRIGGER CARGO_BU FOR CARGO
ACTIVE BEFORE UPDATE POSITION 0
AS
begin
  IF (NEW.DT_CRIACAO IS NULL) THEN
    NEW.DT_CRIACAO = 'now';
  IF (NEW.DT_ALTERACAO IS NULL) THEN
    NEW.DT_ALTERACAO = 'now';
end
^

/* Trigger: PESSOA_BI */
CREATE TRIGGER PESSOA_BI FOR PESSOA
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID_PESSOA IS NULL) THEN
    NEW.ID_PESSOA = GEN_ID(GEN_PESSOA_ID,1);
END
^

/* Trigger: PESSOA_BU */
CREATE TRIGGER PESSOA_BU FOR PESSOA
ACTIVE BEFORE UPDATE POSITION 0
AS
begin
  IF (NEW.DT_CRIACAO IS NULL) THEN
    NEW.DT_CRIACAO = 'now';
  IF (NEW.DT_ALTERACAO IS NULL) THEN
    NEW.DT_ALTERACAO = 'now';
end
^

/* Trigger: TIPO_BI */
CREATE TRIGGER TIPO_BI FOR TIPO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID_TIPO IS NULL) THEN
    NEW.ID_TIPO = GEN_ID(GEN_TIPO_ID,1);
END
^

/* Trigger: TIPO_BU */
CREATE TRIGGER TIPO_BU FOR TIPO
ACTIVE BEFORE UPDATE POSITION 0
AS
begin
  IF (NEW.DT_CRIACAO IS NULL) THEN
    NEW.DT_CRIACAO = 'now';
  IF (NEW.DT_ALTERACAO IS NULL) THEN
    NEW.DT_ALTERACAO = 'now';
end
^

SET TERM ; ^



/******************************************************************************/
/***                           Stored Procedures                            ***/
/******************************************************************************/


SET TERM ^ ;

ALTER PROCEDURE SP_GEN_CARGO_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  ID = GEN_ID(GEN_CARGO_ID, 1);
  SUSPEND;
END
^

ALTER PROCEDURE SP_GEN_PESSOA_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  ID = GEN_ID(GEN_PESSOA_ID, 1);
  SUSPEND;
END
^

ALTER PROCEDURE SP_GEN_TIPO_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  ID = GEN_ID(GEN_TIPO_ID, 1);
  SUSPEND;
END
^


SET TERM ; ^


/******************************************************************************/
/***                              Descriptions                              ***/
/******************************************************************************/

COMMENT ON TABLE CARGO IS 'Tabela de cargos';
COMMENT ON TABLE PESSOA IS 'Cadastro de Pessoas (clientes, funcionários, etc)';
COMMENT ON TABLE TIPO IS 'Cadastro dos tipos de Pessoas (clientes, funcionários, etc)';

/* Fields descriptions */

COMMENT ON COLUMN CARGO.ID_CARGO IS 'Código do cargo';
COMMENT ON COLUMN CARGO.NO_CARGO IS 'Descrição do cargo';
COMMENT ON COLUMN CARGO.DT_CRIACAO IS 'Data de criação do registro';
COMMENT ON COLUMN CARGO.DT_ALTERACAO IS 'Data de alteração do registro';
COMMENT ON COLUMN PESSOA.ID_PESSOA IS 'Código da Pessoa';
COMMENT ON COLUMN PESSOA.NO_PESSOA IS 'Nome da Pessoa';
COMMENT ON COLUMN PESSOA.ID_TIPO IS 'Tipo de Pessoa';
COMMENT ON COLUMN PESSOA.IN_FJ IS '[F]Ísica ou [J]urídica';
COMMENT ON COLUMN PESSOA.DT_CRIACAO IS 'Data de criação do registro';
COMMENT ON COLUMN PESSOA.DT_ALTERACAO IS 'Data de alteração do registro';
COMMENT ON COLUMN TIPO.ID_TIPO IS 'Código do tipo de pessoa';
COMMENT ON COLUMN TIPO.NO_TIPO IS 'Descrição do tipo de pessoa';
COMMENT ON COLUMN TIPO.DT_CRIACAO IS 'Data de criação do registro';
COMMENT ON COLUMN TIPO.DT_ALTERACAO IS 'Data de alteração do registro';
